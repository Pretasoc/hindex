#author:F. Walther#title:The SE-Supreme - Unpublished Studies Part 0#citations:0#end;
#author:F. Kortum#title:The SE-Supreme - Unpublished Studies Part 1#citations:3#end;
#author:F. Kortum#title:The SE-Supreme - Unpublished Studies Part 2#citations:4#end;
#author:Fabian Kortum#title:The SE-Supreme - Unpublished Studies Part 3#citations:3#end;
#author:F. Kortum#title:The SE-Supreme - Unpublished Studies Part 4#citations:4#end;
#author:F. Kortum#title:The SE-Supreme - Unpublished Studies Part 5#citations:2#end;
#author:Fabian Kortum#title:The SE-Supreme - Unpublished Studies Part 6#citations:4#end;
#author:F. Kortum#title:The SE-Supreme - Unpublished Studies Part 7#citations:2#end;
#author:F. Zhang#title:The RE-Supreme - Unpublished Studies Part 1#citations:3#end;
#author:Fabian Zhang#title:The RE-Supreme - Unpublished Studies Part 2#citations:4#end;
#author:F. Zhang#title:The RE-Supreme - Unpublished Studies Part 3#citations:3#end;
#author:F. Zhang#title:The RE-Supreme - Unpublished Studies Part 4#citations:4#end;
#author:Fabian Zhang#title:The RE-Supreme - Unpublished Studies Part 5#citations:2#end;
#author:F. Zhang#title:The RE-Supreme - Unpublished Studies Part 6#citations:4#end;
#author:F. Zhang#title:The RE-Supreme - Unpublished Studies Part 7#citations:2#end;
#author:K. Schneider#title:A descriptive model of software development to guide process improvement#citations:10#end;
#author:Kurt Schneider#title:A game for taking requirements engineering more seriously#citations:27#end;
#author:Kurt Schneider#title:A Learning Support for the Definition of Process Flexibility.#citations:1#end;
#author:K Schneider#title:A method for prioritizing end-user feedback for requirements engineering#citations:6#end;
#author:K Schneider#title:A platform for empirical research on information system evolution#citations:6#end;
#author:Kurt Schneider#title:A systematic approach to CASE selection#citations:1#end;
#author:K. Schneider#title:Abenteuer Softwarequalit_t#citations:13#end;
#author:K. Schneider#title:Active probes synergy in experience-based process improvement#citations:10#end;
#author:K. Schneider#title:Aggregatzust_nde von Anforderungen erkennen und nutzen#citations:11#end;
#author:K Schneider#title:Agile fachmodellgetriebene Softwareentwicklung fŸr mittelst_ndische IT-Projekte#citations:6#end;
#author:K Schneider#title:Agile hour: Teaching xp skills to students and it professionals#citations:8#end;
#author:Kurt Schneider#title:Anforderungen kl_ren mit Videoclips.#citations:1#end;
#author:K Schneider#title:Application of Graph Grammars in an Educational Software Engineering Game: A Case Study in Pragmatic Adoption#citations:3#end;
#author:Kurt Schneider#title:Are developers complying with the process: an XP study#citations:27#end;
#author:K Schneider#title:Auf der Suche nach ma§geschneiderten Unterrichtsformen: Das angeleitete Praktikum#citations:4#end;
#author:K Schneider#title:AusfŸhrbare Modelle der Software-Entwicklung: Struktur und Realisierung eines Simulationssystems#citations:4#end;
#author:Kurt Schneider#title:Automatically recommending test code examples to inexperienced developers#citations:1#end;
#author:K Schneider#title:Beyond documents: visualizing informal communication#citations:35#end;
#author:K Schneider#title:Beyond one-shot security#citations:3#end;
#author:Kurt Schneider#title:Beyond plain video recording of GUI tests: linking test case instructions with visual response documentation#citations:1#end;
#author:K Schneider#title:Breaking the ice for agile development of embedded software: An industry experience report#citations:60#end;
#author:Kurt Schneider#title:Bridging the gap between face-to-face communication and long-term collaboration#citations:29#end;
#author:K Schneider#title:Building test suites in social coding sites by leveraging drive-by commits#citations:7#end;
#author:Kurt Schneider#title:Capturing and documentation of decisions in security requirements engineering through heuristics#citations:1#end;
#author:K Schneider#title:Collaborative learning as interplay between simulation model builder and player#citations:6#end;
#author:K Schneider#title:ConTexter feedback system#citations:7#end;
#author:K Schneider#title:Creating a shared understanding of testing culture on a social coding site#citations:52#end;
#author:K Schneider#title:Dagstuhl-Manifest zur Strategischen Bedeutung des Software Engineering in Deutschland#citations:6#end;
#author:Kurt Schneider#title:Deceived by ease of use: using paradigmatic applications to build visual design environments#citations:18#end;
#author:K Schneider#title:Distributing a lean organization: Maintaining communication while staying agile#citations:3#end;
#author:K Schneider#title:Driving and hindering forces in group discussions: Analyzing change and sustain talk in a software engineering project#citations:2#end;
#author:K Schneider#title:Effective experience repositories for software engineering#citations:39#end;
#author:Kurt Schneider#title:Eliciting contextual requirements at design time: A case study#citations:1#end;
#author:K Schneider#title:Eliciting security requirements and tracing them to design: an integration of Common Criteria, heuristics, and UMLsec#citations:86#end;
#author:K. Schneider#title:Empirical Software Engineering Issues#citations:12#end;
#author:K Schneider#title:Enablers, inhibitors, and perceptions of testing in novice software teams#citations:6#end;
#author:Kurt Schneider#title:Enhancing security requirements engineering by organizational learning#citations:27#end;
#author:K Schneider#title:Erstellung und Anwendung eines Usability-Kriterienkatalogs fŸr Online-Bewerbungssysteme an deutschen Hochschulen.#citations:2#end;
#author:K Schneider#title:Establishing experience factories at Daimler-Benz an experience report#citations:78#end;
#author:K Schneider#title:Experience and knowledge management in software engineering#citations:83#end;
#author:K. Schneider#title:Experience based process improvement#citations:10#end;
#author:K Schneider#title:Experience in implementing a learning software organization#citations:69#end;
#author:K Schneider#title:Experience magnets attracting experiences, not just storing them#citations:7#end;
#author:K Schneider#title:Experiences from establishing knowledge management in a joint research project#citations:3#end;
#author:Kurt Schneider#title:Experiences: Beyond Knowledge#citations:2#end;
#author:Kurt Schneider#title:Exploring FLOW distance in project communication#citations:1#end;
#author:K Schneider#title:Feedback in context: supporting the evolution of IT-Ecosystems#citations:30#end;
#author:K. Schneider#title:FLOW mapping: planning and managing communication in distributed teams#citations:17#end;
#author:K Schneider#title:FLOW-Methode-Methodenbeschreibung zur Anwendung von FLOW#citations:5#end;
#author:Kurt Schneider#title:Focusing spontaneous feedback to support system evolution#citations:24#end;
#author:Kurt Schneider#title:Future studies of learning software organizations#citations:2#end;
#author:K Schneider#title:Generating fast feedback in requirements elicitation#citations:33#end;
#author:Kurt Schneider#title:GloSE-Lab: Teaching Global Software Engineering#citations:20#end;
#author:K Schneider#title:Immer ruhig Blut#citations:4#end;
#author:Kurt Schneider#title:Improving an industrial reference process by information flow analysis: a case study#citations:22#end;
#author:K. Schneider#title:Influencing the adoption of software engineering methods using social software#citations:12#end;
#author:K Schneider#title:Informationsflussanalyse fŸr angemessene dokumentation und verbesserte kommunikation.#citations:5#end;
#author:Kurt Schneider#title:Informing system design through organizational learning#citations:23#end;
#author:K Schneider#title:It was a bit of a race: Gamification of version control#citations:45#end;
#author:Kurt Schneider#title:Knowledge from Document Annotations as By-Product in Distributed Software Engineering#citations:1#end;
#author:K Schneider#title:Komm, wir spielen Projektleiter!#citations:5#end;
#author:K. Schneider#title:Learning Software Organisations and Requirements Engineering: First International Workshop#citations:8#end;
#author:K. Schneider#title:Learning to write better requirements through heuristic critiques#citations:13#end;
#author:K. Schneider#title:Leveraging feedback on processes in SOA projects#citations:10#end;
#author:K Schneider#title:LIDs: a light-weight approach to experience elicitation and reuse#citations:53#end;
#author:K. Schneider#title:Maintaining requirements for long-living software systems by incorporating security knowledge#citations:10#end;
#author:Kurt Schneider#title:Managing knowledge on communication and information flow in global software projects#citations:21#end;
#author:K Schneider#title:Maturing experience base concepts at DaimlerChrysler#citations:42#end;
#author:Kurt Schneider#title:Media, Mood, and Meetings: Related to Project Success?#citations:1#end;
#author:K Schneider#title:Meeting intensity as an indicator for project pressure: Exploring meeting profiles#citations:2#end;
#author:K Schneider#title:Model-based security engineering: Managed co-evolution of security knowledge and software models#citations:3#end;
#author:Kurt Schneider#title:Modeling and Improving Information Flows in the Development of Large Business Applications#citations:2#end;
#author:Kurt Schneider#title:Mutual assessment in the social programmer ecosystem: An empirical investigation of developer profile aggregators#citations:26#end;
#author:K Schneider#title:Object-Oriented Simulation of the Software Development Process in SESAM#citations:8#end;
#author:Kurt Schneider#title:Orchestration of Global Software Engineering Projects-Position Paper#citations:26#end;
#author:K Schneider#title:Organizational learning and experience documentation in industrial software projects#citations:55#end;
#author:K Schneider#title:Prototypes as assets, not toys: why and how to extract knowledge from prototypes#citations:58#end;
#author:K Schneider#title:Push or pull: Two cognitive modes of systematic experience transfer at DaimlerChrysler#citations:8#end;
#author:Kurt Schneider#title:Rationale as a by-product#citations:29#end;
#author:K Schneider#title:Realistic and unrealistic expectations about experience exploitation#citations:6#end;
#author:K Schneider#title:Recommendations as learning: From discrepancies to software improvement#citations:2#end;
#author:K. Schneider#title:Recommending terms for glossaries: A computer-based approach#citations:11#end;
#author:K Schneider#title:Requirements compliance as a measure of project success#citations:4#end;
#author:K Schneider#title:Requirements Engineering in IT-…kosystemen mit Hilfe von Archetypen.#citations:2#end;
#author:K Schneider#title:Restoring Security of Long-Living Systems by Co-Evolution#citations:2#end;
#author:K Schneider#title:Risikominimierung bei der EinfŸhrung neuer Softwaretechnologien in der industriellen Praxis#citations:3#end;
#author:K Schneider#title:Semiautomatic security requirements engineering and evolution using decision documentation, heuristics, and user monitoring#citations:2#end;
#author:K. Schneider#title:Serious insights through fun software-projects#citations:9#end;
#author:K. Schneider#title:SESAM-simulating software projects#citations:15#end;
#author:Kurt Schneider#title:SESAM: a hybrid simulation formalism based on graph grammar concepts#citations:1#end;
#author:K Schneider#title:SESAM: Software-Engineering-Simulation durch animierte Modelle#citations:8#end;
#author:K Schneider#title:SESAM: Zwischen Planspiel und Adventure Game#citations:3#end;
#author:Kurt Schneider#title:Software experience center. The evolution of the experience factory concept#citations:22#end;
#author:K Schneider#title:Softwareentwicklung zwischen Disziplin und Schnelligkeit#citations:4#end;
#author:Kurt Schneider#title:Softwaretechnik#citations:2#end;
#author:K Schneider#title:Studien-Arbeiten: ein Leitfaden zur Vorbereitung, DurchfŸhrung und Betreuung von Studien-, Diplom-und Doktorarbeiten am Beispiel Informatik#citations:56#end;
#author:K Schneider#title:Studienarbeiten#citations:32#end;
#author:K Schneider#title:Supporting acceptance testing in distributed software projects with integrated feedback systems: Experiences and requirements#citations:4#end;
#author:K Schneider#title:Supporting learning organisations in writing better requirements documents based on heuristic critiques#citations:4#end;
#author:K. Schneider#title:Supporting requirements engineers in recognising security issues#citations:10#end;
#author:K Schneider#title:Supporting the cooperation of end-user programmers through social development environments#citations:4#end;
#author:K Schneider#title:Systematic Experience Transfer Three Case Studies From a Cognitive Point of View#citations:5#end;
#author:Kurt Schneider#title:Systematic tailoring of quality techniques#citations:21#end;
#author:Kurt Schneider#title:Tailoring video recording to support efficient GUI testing and debugging#citations:1#end;
#author:K Schneider#title:Teaching old services new tricks: adding HATEOAS support as an afterthought#citations:7#end;
#author:Kurt Schneider#title:Teaching software project management by simulationÑExperiences with a comprehensive model#citations:19#end;
#author:K Schneider#title:Towards adaptation and evolution of domain-specific knowledge for maintaining secure systems#citations:4#end;
#author:K Schneider#title:Towards integrated rule-driven software development for IT ecosystems#citations:3#end;
#author:K. Schneider#title:Towards understanding communication structure in pair programming#citations:14#end;
#author:K Schneider#title:†ber Psychopathen und ihre kriminalbiologische Bedeutung#citations:6#end;
#author:K Schneider#title:Understanding the role of requirements artifacts in kanban#citations:2#end;
#author:Kurt Schneider#title:Using event-driven process chains for model-driven development of business applications#citations:18#end;
#author:Kurt Schneider#title:Using flow to improve communication of requirements in globally distributed software projects#citations:27#end;
#author:K. Schneider#title:Utilizing rule deviations in IT ecosystems for implicit requirements elicitation#citations:9#end;
#author:K Schneider#title:Versioning and evolution requirements for model-based system development#citations:4#end;
#author:K Schneider#title:Verzahnung von Requirements Engineering und Gesch_ftsprozessdesign.#citations:4#end;
#author:K. Schneider#title:Videos vs. Use Cases: Can Videos Capture More Requirements under Time Pressure?#citations:12#end;
#author:K Schneider#title:Vier Formen der Erfahrungsvermittlung im Studium#citations:5#end;
#author:K Schneider#title:vis-A-vis: An Object-Oriented Aplication Framework for Graphical Design-Tools.#citations:5#end;
#author:Kurt Schneider#title:vis-A-vis: Ein objekt-orientiertes Application Framework fŸr grafische Entwurfswerkzeuge#citations:2#end;
#author:Kurt Schneider#title:Visualizing use case sets as BPMN processes#citations:29#end;
#author:K. Schneider#title:Welcome to the real world: A notation for modeling REST services#citations:8#end;
#author:Kurt Schneider#title:What to expect from software experience exploitation#citations:23#end;
#author:K. Schneider#title:Why we need a granularity concept for user stories#citations:8#end;
#author:K Schneider#title:Work Practices and Challenges in Pull-Based Development: The ContributorÕs Perspective#citations:3#end;